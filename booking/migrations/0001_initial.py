# Generated by Django 3.1.8 on 2021-04-08 22:20

import booking.enums
from django.db import migrations, models
import django.db.models.deletion
import django_enumfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geoinfo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BasePrice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=100, verbose_name='Description')),
                ('price', models.FloatField(verbose_name='price')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bathroom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=30, verbose_name='bathroom types')),
                ('price', models.IntegerField(verbose_name='bathroom price')),
                ('minutes', models.IntegerField(default=0, verbose_name='estimated service time (in minutes)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CleaningType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=30, verbose_name='service type')),
                ('price', models.IntegerField(verbose_name='cleaning price')),
                ('minutes', models.IntegerField(default=0, verbose_name='estimated service time (in minutes)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateTimeDisabler',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('from_date', models.DateField(verbose_name='From this date')),
                ('to_date', models.DateField(verbose_name='To this date')),
                ('from_time', models.TimeField(verbose_name='From this time')),
                ('to_time', models.TimeField(verbose_name='To this time')),
                ('comment', models.CharField(default='No comment', max_length=100, verbose_name='Comment')),
            ],
            options={
                'ordering': ['from_date'],
            },
        ),
        migrations.CreateModel(
            name='ExtraOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=100, verbose_name='option')),
                ('price', models.IntegerField(verbose_name='option price')),
                ('icon', models.CharField(max_length=100, verbose_name='option icon')),
                ('minutes', models.IntegerField(default=0, verbose_name='estimated service time (in minutes)')),
                ('is_active', models.BooleanField(default=True, verbose_name='active?')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Flexibility',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=30, verbose_name='description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=50, verbose_name='frequency')),
                ('discount', models.IntegerField(verbose_name='frequency price')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=30, verbose_name='room types')),
                ('price', models.IntegerField(verbose_name='room price')),
                ('minutes', models.IntegerField(default=0, verbose_name='estimated service time (in minutes)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('description', models.CharField(max_length=30, verbose_name='area')),
                ('price', models.IntegerField(verbose_name='area price')),
                ('minutes', models.IntegerField(default=0, verbose_name='estimated service time (in minutes)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('firstname', models.CharField(max_length=100, verbose_name='First Name')),
                ('lastname', models.CharField(max_length=100, verbose_name='Last Name')),
                ('phone', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
                ('address', models.CharField(max_length=300, verbose_name='address')),
                ('suite', models.CharField(max_length=50, verbose_name='app/suite')),
                ('zipcode', models.CharField(max_length=50, verbose_name='zipcode')),
                ('maid_qty', models.CharField(blank=True, max_length=20, null=True, verbose_name='Maid Qty')),
                ('hours_qty', models.CharField(blank=True, max_length=5, null=True, verbose_name='Hours')),
                ('date', models.DateField(verbose_name='date')),
                ('time', models.TimeField(verbose_name='time')),
                ('subtotal', models.FloatField(verbose_name='subtotal')),
                ('discount', models.FloatField(verbose_name='discount')),
                ('tax', models.FloatField(verbose_name='tax')),
                ('total', models.FloatField(verbose_name='total')),
                ('entry', django_enumfield.db.fields.EnumField(enum=booking.enums.GainEntry)),
                ('pets', django_enumfield.db.fields.EnumField(enum=booking.enums.Pets)),
                ('covid', django_enumfield.db.fields.EnumField(enum=booking.enums.CovidExposure)),
                ('comments', models.TextField(blank=True, null=True, verbose_name='Customer Comments')),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.servicearea')),
                ('bathroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='booking.bathroom')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='geoinfo.city')),
                ('cleaning_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='booking.cleaningtype')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='geoinfo.country')),
                ('extra_opts', models.ManyToManyField(blank=True, to='booking.ExtraOption')),
                ('flexibility', models.ManyToManyField(blank=True, to='booking.Flexibility')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='booking.frequency')),
                ('room_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='booking.room')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='geoinfo.state')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
    ]
